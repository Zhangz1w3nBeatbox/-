<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzw.dao.videoDao">


    <select id="batchGetVideoByIds" resultType="com.zzw.Entity.Video">
        select
        *
        from
        bilibili_db.t_video
        where
        id in 
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    

    <select id="getAllUserPreference" resultType="com.zzw.Entity.userPreference">
        select
            userId,
            videoId,
            sum(case operationType
                    when '0'then 6
                    when '1'then 2
                    when '2'then 2
                    else 0 end
                )as `value`
        from bilibili_db.t_video_operation
        group by userId,videoId
    </select>

    <insert id="addVideos" parameterType="com.zzw.Entity.Video" useGeneratedKeys="true" keyProperty="id">
        insert into bilibili_db.t_video(userId, url, thumbnail,title,`type`,duration, area, description, createTime)
        VALUES(#{userId},#{url},#{thumbnail},#{title},#{type},#{duration},#{area},#{description},#{createTime})
    </insert>

    <insert id="batchAddVideoTag" parameterType="java.util.List">
        insert into
        bilibili_db.t_video_tag(
        videoId,
        tagId,
        createTime
        )values
        <foreach collection="videoTagList" item="videoTag" separator=",">
            (
                 #{videoTag.videoId},
                 #{videoTag.tagId},
                 #{videoTag.createTime}
            )
        </foreach>
    </insert>


    
    <select id="pageCountVideos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
            count(1)
        from
            bilibili_db.t_video
        where
            1=1
            <if test="area!=null and area!='' ">
                and area = #{area}
            </if>
    </select>

    <select id="pageListVideos" parameterType="java.util.Map" resultType="com.zzw.Entity.Video">
        select
        *
        from
        bilibili_db.t_video
        where
        1=1
        <if test="area!=null and area!='' ">
            and area = #{area}
        </if>
        order by id desc
        limit #{start},#{limit}
    </select>

    <select id="getVideoById" parameterType="java.lang.Long" resultType="com.zzw.Entity.Video">
        select
        *
        from
        bilibili_db.t_video
        where
        id = #{id}
    </select>



    
    <select id="getVideoLikeByVideoId" resultType="com.zzw.Entity.VideoLike">
        select
        *
        from
        bilibili_db.t_video_like
        where
        videoId = #{videoId} and userId = #{userId}
    </select>

    <insert id="addVideoLike" parameterType="com.zzw.Entity.VideoLike">
        insert into
            bilibili_db.t_video_like(userId, videoId, createTime)
        VALUES (
            #{userId},
            #{videoId},
            #{createTime}
        )

    </insert>

    <delete id="deleteVideoLike">
        delete from
            bilibili_db.t_video_like
        where
            userId = #{userId} and videoId=#{videoId}
    </delete>
    
    <select id="getVideoLikes" parameterType="java.lang.Long" resultType="java.lang.Long">

           select
           count(1)
           from
             bilibili_db.t_video_like
           where
            videoId = #{videoId};

    </select>
    
    <delete id="deleteVideoColletion">
        delete from
            bilibili_db.t_video_collection
         where
          videoId = #{videoId} and userId=#{userId}
    </delete>
    
    <insert id="addVideoColletion" parameterType="com.zzw.Entity.VideoCollection">
        insert into
        bilibili_db.t_video_collection(videoId, userId, groupId, createTime)
        VALUES (#{videoId},#{userId},#{groupId},#{createTime})
    </insert>

    <select id="getVideoColletion" parameterType="java.lang.Long" resultType="java.lang.Long">

           select
           count(1)
           from
             bilibili_db.t_video_collection
           where
            videoId = #{videoId};

    </select>

    <select id="getVideoColletionByVideoIdAndUserId" resultType="com.zzw.Entity.VideoCollection">
        select
        *
        from
        bilibili_db.t_video_collection
        where
        videoId = #{videoId} and userId = #{userId}
    </select>

    <select id="getVideoCoinsByVideoIdAndUserId" resultType="com.zzw.Entity.VideoCoin">
        select
        *
        from
        bilibili_db.t_video_coin
        where
        videoId = #{videoId} and userId = #{userId}
    </select>

    <insert id="addVideoCoins" parameterType="com.zzw.Entity.VideoCoin">
        insert into
        bilibili_db.t_video_coin(userId, videoId, amount, createTime) VALUES (
        #{userId},#{videoId},#{amount},#{createTime}
        )
    </insert>

    <update id="updateVideoCoin" parameterType="com.zzw.Entity.VideoCoin">
        update bilibili_db.t_video_coin
        set amount = #{amount},updateTime=#{updateTime}
        where videoId=#{videoId} and userId=#{userId}
    </update>

    <select id="getVideoCoins" parameterType="java.lang.Long" resultType="java.lang.Long">

           select
           sum(amount)
           from
             bilibili_db.t_video_coin
           where
            videoId = #{videoId}

    </select>

    <insert id="addVideosComments" parameterType="com.zzw.Entity.VideoComment">
        insert into
            bilibili_db.t_video_comment(videoId, userId, comment, replyUserId, rootId, createTime)
        values (#{videoId},#{userId},#{comment},#{replyUserId},#{rootId},#{createTime})
    </insert>



    
    <select id="pageCountVideosComents" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(1)
        from
        bilibili_db.t_video_comment
        where
            videoId=#{videoId} and rootId!=null
    </select>


    <select id="pageListVideosComments" parameterType="java.util.Map" resultType="com.zzw.Entity.VideoComment">
        select
            *
        from
        bilibili_db.t_video_comment
        where
            videoId=#{videoId} and rootId!=null
            order by id desc
            limit #{start},#{limit}
    </select>


    <select id="batchGetVideoCommentsByRootId" parameterType="java.util.List" resultType="com.zzw.Entity.VideoComment">
        select
            *
        from
        bilibili_db.t_video_comment
        where
        rootId in 
            <foreach collection="parentList" item="rootId" open="(" close=")" separator=",">
                #{rootId}
            </foreach>
        order by id
    </select>

    <select id="getVideoDetails" parameterType="java.lang.Long" resultType="com.zzw.Entity.Video">
        select
        *
        from
        bilibili_db.t_video
        where
        t_video.id = #{videoId}
    </select>



</mapper>